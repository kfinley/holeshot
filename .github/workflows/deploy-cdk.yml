name: "Deploy System"

on:
  push:
    branches:
      - main

jobs:
  deployment:
    name: "Deployment"

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      # TODO: switch this to pull config from a file on s3 somewhere...
      # TODO: move config.js file build to user-service cdk construct
      - name: Bootstrap & Build
        run: |
          pnpm i && cd ./packages/vue2-client/dist
          rm config.js
          echo -e 'window.HoleshotConfig = {' > config.js
          echo -e 'ClientId: "2u61k6gggc4acjhj9tda7ale9m",' >> config.js
          echo -e 'PoolId: "us-east-1_nmrmokUDK",' >> config.js
          echo -e 'ServiceWorkerPath: "service-worker.js",' >> config.js
          echo -e 'Host: "holeshot-bmx.com",' >> config.js
          echo -e 'Api: "4dlp5ls3hl.execute-api.us-east-1.amazonaws.com/v1",' >> config.js
          echo -e 'WebSocket: "ag49r7wqy7.execute-api.us-east-1.amazonaws.com/v1",' >> config.js
          echo -e 'Agent: "holeshot-web/0.0.1",' >> config.js
          echo -e '};' >> config.js
          cd ../..
          pnpm run build:lambdas

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Bootstrap, Deploy CDK, & sync S3 media "
        working-directory: ./infrastructure
        env:
          AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          NODE_ENV: production
          SES_SENDER_EMAIL: ${{ secrets.SES_SENDER_EMAIL }}
        run: |
          npm i --omit=dev
          npm run cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/${{ secrets.AWS_REGION }}
          npm run deploy
          cd ../media && aws s3 sync . s3://images.holeshot-bmx.com
